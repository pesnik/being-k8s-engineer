apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-timescaledb
  labels:
    app: timescaledb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: timescaledb
  template:
    metadata:
      labels:
        app: timescaledb
    spec:
      {{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      containers:
        - name: timescaledb
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: {{ .Values.config.POSTGRES_PASSWORD | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.config.POSTGRES_USER | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.config.POSTGRES_DB | quote }}
            - name: POSTGRES_INITDB_ARGS
              value: {{ .Values.config.POSTGRES_INITDB_ARGS | quote }}
            - name: POSTGRES_HOST_AUTH_METHOD
              value: {{ .Values.config.POSTGRES_HOST_AUTH_METHOD | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: postgres
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}

